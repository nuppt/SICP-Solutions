(cd "./")
(load "example-test-for-primality.scm")
;; use runtime interface to get the amount of time the system has been running(in microseconds)
(define (timed-prime-test n)
  (start-prime-test n (real-time-clock)))

(define (start-prime-test n start-time)
  (if (prime? n)
      (report-prime n (- (real-time-clock) start-time))
      false))

(define (report-prime n elapsed-time)
  (newline)
  (display n)
  (display " *** ")
  (display elapsed-time)
  true)

;; test odds in [l, r]
(define (search-for-primes start max-primes)
  (define (primes-from n count)
    (cond ((zero? count) ())
	  ((timed-prime-test n) (cons n (primes-from (+ n 2) (- count 1))))
	  (else (primes-from (+ n 2) count))))
  (primes-from (if (even? start)
		   (+ 1 start)
		   start)
	       max-primes))

(search-for-primes 1000 3)
(search-for-primes 10000 3)
(search-for-primes 100000 3)
(search-for-primes 1000000 3)
(search-for-primes 10000000 3)
(search-for-primes 100000000 3)
(search-for-primes 1000000000 3)
