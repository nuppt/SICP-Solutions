(define (smallest-divisor n) (find-divisor n 2))

;; enum from 2 to \sqrt(n)
(define (find-divisor n test-divisor)
  (cond ((> (square test-divisor) n) n)
	((divides? test-divisor n) test-divisor)
	(else (find-divisor n (next test-divisor)))))

(define (divides? a b) (= (remainder b a) 0))

(define (next n)
  (cond ((= n 2) 3)
	((odd? n) (+ n 2))
	(else (+ n 1))))

(define (prime? n)
  (if (<= n 1)
      false
      (= n (smallest-divisor n))))

;; test prime/
(prime? 1)
(prime? 2)
(prime? 3)
(prime? 4)
(prime? 9)
(prime? 53)
;;(RESTART 1)

(define (timed-prime-test n)
  (newline)
  (display n)
  (start-prime-test n (real-time-clock)))

(define (start-prime-test n start-time)
  (if (prime? n)
      (report-prime (- (real-time-clock) start-time))))

(define (report-prime elapsed-time)
  (display " *** ")
  (display elapsed-time))

;;;; These are primes we found in exercise-1.22
;;1 ]=>
;;1009 *** 0
;;1013 *** 0
;;1019 *** 0
;;;Value 41: (1009 1013 1019)
;;
;;1 ]=>
;;10007 *** 0
;;10009 *** 0
;;10037 *** 0
;;;Value 42: (10007 10009 10037)
;;
;;1 ]=>
;;100003 *** 0
;;100019 *** 0
;;100043 *** 0
;;;Value 43: (100003 100019 100043)
;;
;;1 ]=>
;;1000003 *** 1
;;1000033 *** 1
;;1000037 *** 1
;;;Value 44: (1000003 1000033 1000037)
;;
;;1 ]=>
;;10000019 *** 3
;;10000079 *** 3
;;10000103 *** 3
;;;Value 45: (10000019 10000079 10000103)
;;
;;1 ]=>
;;100000007 *** 9
;;100000037 *** 10
;;100000039 *** 9
;;;Value 46: (100000007 100000037 100000039)


;;1 ]=>
;;1009 *** 0
;;;Unspecified return value
;;
;;1 ]=>
;;1013 *** 0
;;;Unspecified return value
;;
;;1 ]=>
;;1019 *** 0
;;;Unspecified return value
;;
;;1 ]=>
;;10007 *** 0
;;;Unspecified return value
;;
;;1 ]=>
;;10009 *** 0
;;;Unspecified return value
;;
;;1 ]=>
;;10037 *** 0
;;;Unspecified return value
;;
;;1 ]=>
;;100003 *** 1
;;;Unspecified return value
;;
;;1 ]=>
;;100019 *** 0
;;;Unspecified return value
;;
;;1 ]=>
;;100043 *** 0
;;;Unspecified return value
;;
;;1 ]=>
;;1000003 *** 1
;;;Unspecified return value
;;
;;1 ]=>
;;1000033 *** 1
;;;Unspecified return value
;;
;;1 ]=>
;;1000037 *** 0
;;;Unspecified return value
;;
;;1 ]=>
;;10000019 *** 2
;;;Unspecified return value
;;
;;1 ]=>
;;10000079 *** 2
;;;Unspecified return value
;;
;;1 ]=>
;;10000103 *** 2
;;;Unspecified return value
;;
;;1 ]=>
;;100000007 *** 8
;;;Unspecified return value
;;
;;1 ]=>
;;100000037 *** 7
;;;Unspecified return value
;;
;;1 ]=>
;;100000039 *** 6
;;;Unspecified return value

(timed-prime-test 1009)
(timed-prime-test 1013)
(timed-prime-test 1019)
(timed-prime-test 10007)
(timed-prime-test 10009)
(timed-prime-test 10037)
(timed-prime-test 100003)
(timed-prime-test 100019)
(timed-prime-test 100043)
(timed-prime-test 1000003)
(timed-prime-test 1000033)
(timed-prime-test 1000037)
(timed-prime-test 10000019)
(timed-prime-test 10000079)
(timed-prime-test 10000103)
(timed-prime-test 100000007)
(timed-prime-test 100000037)
(timed-prime-test 100000039)


;; From result generated by new timed-prime-test procedure, the speed
;; of exeution is not twice as fast. Because distribution of primes are
;; not even in integer field.
